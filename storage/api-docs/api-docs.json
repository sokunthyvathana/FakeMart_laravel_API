{
    "openapi": "3.0.0",
    "info": {
        "title": "Sokunthy Vathana",
        "description": "API documentation for managing products, branches, and more.",
        "contact": {
            "email": "sokunthyvathana@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/branches": {
            "get": {
                "tags": [
                    "Branch"
                ],
                "summary": "Get paginated list of branches",
                "description": "Returns a paginated list of branches with optional query parameters for page size and limit.",
                "operationId": "8512c7cd0f421159fb7acb2f79570002",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful pagination response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total_items": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Phnom Penh Branch"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "example": "Phnom Penh"
                                                    },
                                                    "contact_number": {
                                                        "type": "string",
                                                        "example": "012345678"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/{id}": {
            "get": {
                "tags": [
                    "Branch"
                ],
                "summary": "Get branch by ID",
                "description": "Retrieve a single branch by its ID.",
                "operationId": "6949da17051fa360e5a81175fcef66f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the branch to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Phnom Penh Branch"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Phnom Penh"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch with ID 99 not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/create": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Create a new branch",
                "description": "Creates a new branch with the given details.",
                "operationId": "ef83e9da50d4d2ff284385b83fd368af",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "branch_name",
                                    "location",
                                    "contact_number"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Phnom Penh Branch"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Phnom Penh"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "012345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_branch": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Phnom Penh Branch"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Phnom Penh"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Branch name is not allowed to be null."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/update": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Update branch by ID",
                "description": "Updates an existing branch's details.",
                "operationId": "481231b3b2f719c7da332906418aa9aa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "branch_name",
                                    "location",
                                    "contact_number"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Branch Name"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Updated Location"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "012345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "updated_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Branch Name"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Updated Location"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Branch not found"
                    }
                }
            }
        },
        "/api/branch/delete/force": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Force delete a soft-deleted branch",
                "description": "Permanently delete a branch from the trash (soft-deleted).",
                "operationId": "1bc1547f5429b82b57aa11ffc8dbbde4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Branch with ID 1 permanently deleted."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found in trash",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch with ID 99 not found in trash."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/delete/soft": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Soft delete a branch",
                "description": "Soft deletes a branch by setting deleted_at without permanently removing it.",
                "operationId": "20da6bbcce9479ef5449996f055606fa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch soft deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "deleted_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Kampot Branch"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Kampot"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "example": "2025-07-03T10:23:45.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found or already deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch with ID 10 not found or already deleted!"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/restore/{id}": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Restore a soft-deleted branch",
                "description": "Restores a branch that was soft-deleted.",
                "operationId": "03a200aacfaf0bf50d1c36d8a1a140fc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the branch to restore",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "restored_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Restored Branch"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Siem Reap"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found in trash",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch with ID 10 not found in trash."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get paginated categories",
                "operationId": "678b3a1187b5612bb4cad7d425997171",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated category list"
                    }
                }
            }
        },
        "/api/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category by ID",
                "operationId": "b5e0594038139a2979e671987221c993",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/category/create": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "operationId": "4859ff06489a8968c36b52dd27c4e265",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the category",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the category",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/category/update": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Update category",
                "operationId": "bb6089f105a82c629ab569799ac4cf83",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "The ID of the category to update",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "The name of the category",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the category",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/category/delete/force": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Permanently delete category",
                "operationId": "56a69e57a2812575826aaa6870aefd70",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category permanently deleted"
                    },
                    "404": {
                        "description": "Category not found in trash"
                    }
                }
            }
        },
        "/api/category/delete/soft": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Soft delete category",
                "operationId": "87125a8c1239e43816d01743d074d575",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category soft-deleted"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/category/restore/{id}": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Restore soft-deleted category",
                "operationId": "aa740f80650a0649c6ab0204717340c6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category restored"
                    },
                    "404": {
                        "description": "Category not found in trash"
                    }
                }
            }
        },
        "/api/invoices": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get paginated invoices",
                "operationId": "8ca837fa812d14a1dc61263a5c1ff525",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of invoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total_items": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get invoice by ID",
                "operationId": "6ed150c6b44adbd1398a262bc6705080",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    }
                }
            }
        },
        "/api/invoice/create": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Create a new invoice",
                "operationId": "3d3455ed63760b250d6f943e8df1a8d4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_user": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/invoice/update": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update an existing invoice",
                "operationId": "e8120ba5068d827ad79d58f8fe823621",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "user_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "updated_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Invoice not found"
                    }
                }
            }
        },
        "/api/invoice/delete/force": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Permanently delete a trashed invoice",
                "operationId": "6fc1fcb40a4bcf8cba03cd741c5c9336",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice deleted permanently",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found in trash"
                    }
                }
            }
        },
        "/api/invoice/delete/soft": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Soft delete an invoice",
                "operationId": "dda6cb7d18df4441006b2849f666bff1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice soft deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "deleted_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found"
                    }
                }
            }
        },
        "/api/invoice/restore/{id}": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Restore a soft-deleted invoice",
                "operationId": "42614c12dacebdfcd6c2023e3aa87ff7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice restored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "restored_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found in trash"
                    }
                }
            }
        },
        "/api/invoiceItems": {
            "get": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Get paginated invoice items",
                "operationId": "9e1ebe4d188b686698b9e5fb5f970f79",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of invoice items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total_items": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoiceItem/{id}": {
            "get": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Get invoice item by ID",
                "operationId": "d84f6f297a9b2f4734adfaf12927245d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice item retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice item not found"
                    }
                }
            }
        },
        "/api/invoiceItem/create": {
            "post": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Create a new invoice item",
                "operationId": "19c57ac1c0c424715e4957cecae65d3c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "invoice_id",
                                    "product_id",
                                    "qty",
                                    "price"
                                ],
                                "properties": {
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "qty": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_InvoiceItem": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/invoiceItem/update": {
            "post": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Update an existing invoice item",
                "operationId": "1f12a0f75d96e70b705c05aa9625b17c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "invoice_id",
                                    "product_id",
                                    "qty",
                                    "price"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "qty": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 12
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "updated_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "InvoiceItem not found"
                    }
                }
            }
        },
        "/api/invoiceItem/delete/force": {
            "post": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Permanently delete a trashed invoice item",
                "operationId": "cf2f3572a3c3c0741d2657e2e4182bb8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice item permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice item not found in trash"
                    }
                }
            }
        },
        "/api/invoiceItem/delete/soft": {
            "post": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Soft delete an invoice item",
                "operationId": "ba9e607b3f9c8f1cb297b09439700a8c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice item soft deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "deleted_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice item not found"
                    }
                }
            }
        },
        "/api/invoiceItem/restore/{id}": {
            "post": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Restore a soft-deleted invoice item",
                "operationId": "e547394ae6912256c3bf3cec11b21d51",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice item restored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "restored_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice item not found in trash"
                    }
                }
            }
        },
        "/api/positions": {
            "get": {
                "tags": [
                    "Position"
                ],
                "summary": "Get paginated list of positions",
                "description": "Returns a paginated list of positions based on page number and limit.",
                "operationId": "10f238b826cb35b5e07600fb75137de1",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "description": "Number of items per page (default is 10)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Page number (default is 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of positions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total_items": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "position_name": {
                                                        "type": "string",
                                                        "example": "Manager"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-07-10T12:34:56.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-07-10T12:34:56.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/{id}": {
            "get": {
                "tags": [
                    "Position"
                ],
                "summary": "Get position by ID",
                "description": "Fetch a single position record using its ID.",
                "operationId": "cb310c3e91db59b78a976d7223d21a9c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the position to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "position_name": {
                                                    "type": "string",
                                                    "example": "Manager"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-10T12:34:56.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-10T12:34:56.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Position with ID 99 not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/create": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Create a new position",
                "description": "Create a new position with a name and associated branch ID.",
                "operationId": "7fe045f58b4102e96e86542ab3d6e95b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "branch_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Manager"
                                    },
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_position": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/update": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Update an existing position",
                "description": "Update the name and branch_id of a position by its ID.",
                "operationId": "3f5362a94f8c651ec8f00f3119b467f7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "branch_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Assistant Manager"
                                    },
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "updated_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Position with ID {id} not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/delete/force": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Force delete a trashed position",
                "description": "Permanently delete a soft-deleted position by ID",
                "operationId": "1ddfe14f44ae184994a29ec818bc50fd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Position with ID 3 permanently deleted."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found in trash",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Position with ID 3 not found in trash."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/delete/soft": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Soft delete a position",
                "description": "Soft deletes (moves to trash) a position by ID",
                "operationId": "0865ad72c5d6794c959890de8aa35ed3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position soft-deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "deleted_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Position with ID 3 not found or already deleted!"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/restore/{id}": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Restore a soft-deleted position",
                "description": "Restores a soft-deleted position using its ID.",
                "operationId": "ab56165d2241d236873c7e6e5e3a2ea3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the position to restore",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "restored_data": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found in trash",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Position with ID 3 not found in trash."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get paginated list of products",
                "operationId": "796ff0bdf4018b2d3636a3f65e72e689",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with paginated products"
                    }
                }
            }
        },
        "/api/product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get product by ID",
                "operationId": "0847d7d2b6de240f2532a6a0a28060a8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/product/create": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "operationId": "3f93e9ef90a05362bc5d70f7c0721087",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_name",
                                    "price",
                                    "cost",
                                    "category_id"
                                ],
                                "properties": {
                                    "product_name": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/product/update": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Update product",
                "operationId": "cc5d4dca3996bc7a9f428b3e83392dec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "product_name",
                                    "price",
                                    "cost",
                                    "category_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "product_name": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/product/delete/force": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Permanently delete a soft-deleted product",
                "operationId": "bfec7733e6eab95caf461d63ba7a2d63",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product permanently deleted"
                    },
                    "404": {
                        "description": "Product not found in trash"
                    }
                }
            }
        },
        "/api/product/delete/soft": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Soft delete a product",
                "operationId": "f1505cfa5fb691572304e4bad6636b1d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product soft deleted"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/product/restore/{id}": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Restore a soft-deleted product",
                "operationId": "fa1a19f8528ce6e6bb37d3122ec79da1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product restored successfully"
                    },
                    "404": {
                        "description": "Product not found in trash"
                    }
                }
            }
        },
        "/api/staffs": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Get paginated list of staff",
                "operationId": "69e3011ec7251b70145144de8e58aac0",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful pagination response"
                    }
                }
            }
        },
        "/api/staff/{id}": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Get staff by ID",
                "operationId": "4159e1238559ccb72045e777a1f615f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff found"
                    },
                    "404": {
                        "description": "Staff not found"
                    }
                }
            }
        },
        "/api/staff/create": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Create a new staff member",
                "description": "Creates a new staff record with validated fields.",
                "operationId": "a51efdba6969031b69ea27b59b9f47d5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "position_id",
                                    "name",
                                    "dob",
                                    "pob",
                                    "address",
                                    "phone",
                                    "nation_id_card"
                                ],
                                "properties": {
                                    "position_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Male",
                                        "nullable": true
                                    },
                                    "dob": {
                                        "type": "string",
                                        "example": "1990-01-01"
                                    },
                                    "pob": {
                                        "type": "string",
                                        "example": "Phnom Penh"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Street 123, Phnom Penh"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "012345678"
                                    },
                                    "nation_id_card": {
                                        "type": "string",
                                        "example": "N123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_staff": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "position_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "example": "Male"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "example": "1990-01-01"
                                                },
                                                "pob": {
                                                    "type": "string",
                                                    "example": "Phnom Penh"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "Street 123"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                },
                                                "nation_id_card": {
                                                    "type": "string",
                                                    "example": "N123456789"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-07-11T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-07-11T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "position_id": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The selected position ID does not exist."
                                            }
                                        },
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The name field is required."
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/update": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Update an existing staff member",
                "description": "Updates staff data by ID",
                "operationId": "d032531fadfb4b261a15c46c4328fe74",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "position_id",
                                    "name",
                                    "dob",
                                    "pob",
                                    "address",
                                    "phone",
                                    "nation_id_card"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Female",
                                        "nullable": true
                                    },
                                    "dob": {
                                        "type": "string",
                                        "example": "1995-05-15"
                                    },
                                    "pob": {
                                        "type": "string",
                                        "example": "Siem Reap"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Street 456, Siem Reap"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "098765432"
                                    },
                                    "nation_id_card": {
                                        "type": "string",
                                        "example": "ID987654321"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "updated_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "position_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Smith"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "example": "Female"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "example": "1995-05-15"
                                                },
                                                "pob": {
                                                    "type": "string",
                                                    "example": "Siem Reap"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "Street 456, Siem Reap"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "098765432"
                                                },
                                                "nation_id_card": {
                                                    "type": "string",
                                                    "example": "ID987654321"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-07-10T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-07-11T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "position_id": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The selected position ID does not exist."
                                            }
                                        },
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The name field is required."
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/delete/force": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Force delete staff",
                "operationId": "3a8ee22f795e7af7c5b35932a52a0f4c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff permanently deleted"
                    },
                    "404": {
                        "description": "Staff not found in trash"
                    }
                }
            }
        },
        "/api/staff/delete/soft": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Soft delete staff",
                "operationId": "8f7c9478ecbf6207958c867211da3768",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff soft deleted"
                    },
                    "404": {
                        "description": "Staff not found"
                    }
                }
            }
        },
        "/api/staff/restore/{id}": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Restore soft deleted staff",
                "operationId": "b6e0fb55c6876d14e22552f9974ecd09",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff restored successfully"
                    },
                    "404": {
                        "description": "Staff not found in trash"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get paginated list of users",
                "operationId": "a2cc97e9087bb0cf8e55f9f82dc6dfa3",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated users fetched successfully"
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "operationId": "e1c660c462716929bfe56d707ea7204b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/user/create": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "operationId": "0e56fbbaa8345a43fa5804bdb06f974d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "password",
                                    "staff_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret123"
                                    },
                                    "staff_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/user/update": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update an existing user",
                "operationId": "38f7f99480bed8180edb40deddeb4048",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "password",
                                    "staff_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "new_admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpass123"
                                    },
                                    "staff_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/user/delete/force": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Permanently delete a soft-deleted user",
                "operationId": "c93fa066a809f1d0ad901d1547c0653a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User permanently deleted"
                    },
                    "404": {
                        "description": "User not found in trash"
                    }
                }
            }
        },
        "/api/user/delete/soft": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Soft delete a user",
                "operationId": "bf57e3642ecf006f830c22481cb0c8bd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User soft deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/user/restore/{id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Restore a soft-deleted user",
                "operationId": "9c84c033c6b7fb4f4527a4392d778c20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User restored successfully"
                    },
                    "404": {
                        "description": "User not found in trash"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Branch",
            "description": "Branch"
        },
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "Invoice",
            "description": "Invoice"
        },
        {
            "name": "InvoiceItem",
            "description": "InvoiceItem"
        },
        {
            "name": "Position",
            "description": "Position"
        },
        {
            "name": "Product",
            "description": "Product"
        },
        {
            "name": "Staff",
            "description": "Staff"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}