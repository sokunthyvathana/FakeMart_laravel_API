{
    "openapi": "3.0.0",
    "info": {
        "title": "Sokunthy Vathana",
        "description": "API documentation for managing products, branches, and more.",
        "contact": {
            "email": "sokunthyvathana@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/branches": {
            "get": {
                "tags": [
                    "Branch"
                ],
                "summary": "Get paginated list of branches",
                "description": "Returns a paginated list of branches with optional query parameters for page size and limit.",
                "operationId": "8512c7cd0f421159fb7acb2f79570002",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "description": "Current page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful pagination response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total_pages": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total_items": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "branch_name": {
                                                        "type": "string",
                                                        "example": "Phnom Penh Branch"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "example": "Phnom Penh"
                                                    },
                                                    "contact_number": {
                                                        "type": "string",
                                                        "example": "012345678"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/{id}": {
            "get": {
                "tags": [
                    "Branch"
                ],
                "summary": "Get branch by ID",
                "description": "Retrieve a single branch by its ID.",
                "operationId": "6949da17051fa360e5a81175fcef66f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the branch to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "branch_name": {
                                                    "type": "string",
                                                    "example": "Phnom Penh Branch"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Phnom Penh"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch with ID 99 not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/create": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Create a new branch",
                "description": "Creates a new branch with the given details.",
                "operationId": "ef83e9da50d4d2ff284385b83fd368af",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "branch_name",
                                    "location",
                                    "contact_number"
                                ],
                                "properties": {
                                    "branch_name": {
                                        "type": "string",
                                        "example": "Phnom Penh Branch"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Phnom Penh"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "012345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_branch": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "branch_name": {
                                                    "type": "string",
                                                    "example": "Phnom Penh Branch"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Phnom Penh"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "branch_name": {
                                                    "type": "string",
                                                    "example": "Branch name is not allowed to be null."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/update": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Update branch by ID",
                "description": "Updates an existing branch's details.",
                "operationId": "481231b3b2f719c7da332906418aa9aa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "branch_name",
                                    "location",
                                    "contact_number"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "branch_name": {
                                        "type": "string",
                                        "example": "Updated Branch Name"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Updated Location"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "012345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "updated_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "branch_name": {
                                                    "type": "string",
                                                    "example": "Updated Branch Name"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Updated Location"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Branch not found"
                    }
                }
            }
        },
        "/api/branch/delete/force": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Force delete a soft-deleted branch",
                "description": "Permanently delete a branch from the trash (soft-deleted).",
                "operationId": "1bc1547f5429b82b57aa11ffc8dbbde4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Branch with ID 1 permanently deleted."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found in trash",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch with ID 99 not found in trash."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/delete/soft": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Soft delete a branch",
                "description": "Soft deletes a branch by setting deleted_at without permanently removing it.",
                "operationId": "20da6bbcce9479ef5449996f055606fa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch soft deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "deleted_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "branch_name": {
                                                    "type": "string",
                                                    "example": "Kampot Branch"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Kampot"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "example": "2025-07-03T10:23:45.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found or already deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch with ID 10 not found or already deleted!"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/restore/{id}": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Restore a soft-deleted branch",
                "description": "Restores a branch that was soft-deleted.",
                "operationId": "03a200aacfaf0bf50d1c36d8a1a140fc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the branch to restore",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "restored_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "branch_name": {
                                                    "type": "string",
                                                    "example": "Restored Branch"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Siem Reap"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found in trash",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch with ID 10 not found in trash."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get paginated categories",
                "operationId": "678b3a1187b5612bb4cad7d425997171",
                "parameters": [
                    {
                        "name": "_pageLimit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "_pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated category list"
                    }
                }
            }
        },
        "/api/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category by ID",
                "operationId": "b5e0594038139a2979e671987221c993",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/category/create": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "operationId": "4859ff06489a8968c36b52dd27c4e265",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/category/update": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Update category",
                "operationId": "bb6089f105a82c629ab569799ac4cf83",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/category/delete/force": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Permanently delete category",
                "operationId": "56a69e57a2812575826aaa6870aefd70",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category permanently deleted"
                    },
                    "404": {
                        "description": "Category not found in trash"
                    }
                }
            }
        },
        "/api/category/delete/soft": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Soft delete category",
                "operationId": "87125a8c1239e43816d01743d074d575",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category soft-deleted"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/category/restore/{id}": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Restore soft-deleted category",
                "operationId": "aa740f80650a0649c6ab0204717340c6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category restored"
                    },
                    "404": {
                        "description": "Category not found in trash"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Branch",
            "description": "Branch"
        },
        {
            "name": "Category",
            "description": "Category"
        }
    ]
}